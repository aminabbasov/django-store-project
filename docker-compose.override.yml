---

# This file is ignored in production, but
# it is automatically picked up in development with:
#
#  $ docker compose up

version: '3.8'
name: "django-shop"

services:
  # server:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     target: dev
  #   container_name: server-shop
  #   environment:
  #     REDIS_URL: redis://redis
  #     DATABASE_URL: postgres://postgres:secret@postgres:5432/postgres
  #   depends_on:
  #     - postgres
  #     - redis
  #   ports:
  #     - 8000:8000  # http://localhost:8000/
  #   command: python manage.py runserver 0.0.0.0:8000
  #   develop:
  #     watch:
  #       - action: sync
  #         path: ./src
  #         target: /src
  #       - action: rebuild
  #         path: dev-requirements.txt
  #   deploy:
  #     restart_policy:
  #       condition: on-failure
  #       delay: 5s
  #       window: 5s

  postgres:
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
    command: postgres -c max_locks_per_transaction=2000

  worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: worker
    container_name: worker-shop
    environment:
      REDIS_URL: redis://redis
    depends_on:
      - postgres
      - redis
    command: celery --app app --workdir /src worker --events -l info

  pgadmin:
    image: dpage/pgadmin4:7.6
    container_name: pgadmin-shop
    ports:
      - '80:80'  # http://localhost:80/
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-volume-shop:/var/lib/pgadmin

  flower:
    image: mher/flower:2.0
    container_name: flower-shop
    ports:
      - '5555:5555'  # http://localhost:5555/
    environment:
      CELERY_BROKER_URL: redis://redis
      CELERY_RESULT_BACKEND: redis://redis
    depends_on:
      - redis
      # - django

volumes:
  pgadmin-volume-shop:
    name: "pgadmin-volume-shop"
