# Generated by Django 4.2 on 2023-07-04 19:11

from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("products", "0003_rename_product_id_productoption_product_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="ProductView",
            fields=[
                ("product_id", models.BigIntegerField()),
                ("variant_id", models.BigIntegerField(primary_key=True, serialize=False)),
                ("public_id", models.UUIDField()),
                ("product_available", models.BooleanField()),
                ("variant_available", models.BooleanField()),
                ("product_created", models.DateTimeField()),
                ("product_modified", models.DateTimeField()),
                ("variant_created", models.DateTimeField()),
                ("variant_modified", models.DateTimeField()),
                ("name", models.CharField(max_length=255)),
                ("short_description", models.CharField(max_length=255)),
                ("description", models.TextField()),
                ("information", models.TextField()),
                ("views", models.PositiveIntegerField()),
                ("option", models.JSONField()),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("discount", models.IntegerField()),
                ("quantity", models.PositiveIntegerField()),
            ],
            options={
                "db_table": "products_productview",
                "managed": False,
            },
        ),
        
        # custom SQL
        
        # create materialized view
        migrations.RunSQL(
            """
            CREATE MATERIALIZED VIEW IF NOT EXISTS
            	products_productview AS
            SELECT
                product.id AS product_id,
                variant.id AS variant_id,
                product.public_id,
                product.available AS product_available,
                variant.available AS variant_available,
                product.created AS product_created,
                product.modified AS product_modified,
                variant.created AS variant_created,
                variant.modified AS variant_modified,
                product.name,
                product.short_description,
                product.description,
                product.information,
                product.views,
                variant.option,
                variant.price,
                variant.discount,
                variant.quantity
            FROM
                products_product AS product
            INNER JOIN
                products_productvariant AS variant
            ON
                product.id = variant.product_id;
            """
        ),
        
        # create refresh function
        migrations.RunSQL(
            """
            CREATE OR REPLACE FUNCTION
            	refresh_products_productview()
            RETURNS TRIGGER LANGUAGE
            	plpgsql
            AS $$
            BEGIN
                REFRESH MATERIALIZED VIEW
            		products_productview;
                RETURN
            		null;
            END $$;
            """
        ),
        
        # create trigger on Product model
        migrations.RunSQL(
            """
            CREATE TRIGGER
            	refresh_products_productview
            AFTER INSERT OR UPDATE OR DELETE OR TRUNCATE
            	ON products_product FOR EACH STATEMENT
            EXECUTE PROCEDURE
            	refresh_products_productview();
            """
        ),
        
        # create trigger on ProductVariant model 
        migrations.RunSQL(
            """
            CREATE TRIGGER
            	refresh_products_productview
            AFTER INSERT OR UPDATE OR DELETE OR TRUNCATE
            	ON products_productvariant FOR EACH STATEMENT
            EXECUTE PROCEDURE
            	refresh_products_productview();
            """
        ),
    ]
